{"ast":null,"code":"// @flow\nfunction assertElement(element) {\n  if (!(element instanceof HTMLElement)) {\n    throw new Error('Must pass a DOM element to find/findAll(element, styledComponent)\"');\n  }\n}\n\nfunction assertStyledComponent(styledComponent) {\n  if (!(styledComponent.styledComponentId && typeof styledComponent.styledComponentId === 'string')) {\n    throw new Error(\"\".concat(styledComponent.displayName || styledComponent.name || 'Component', \" is not a styled component.\"));\n  }\n}\n\nfunction enzymeFind(wrapper\n/* : Object */\n, styledComponent\n/* : Object */\n) {\n  assertStyledComponent(styledComponent);\n  return wrapper.find(\".\".concat(styledComponent.styledComponentId));\n}\n\nfunction find(element\n/* : Element */\n, styledComponent\n/* : Object */\n) {\n  assertElement(element);\n  assertStyledComponent(styledComponent);\n  return element.querySelector(\".\".concat(styledComponent.styledComponentId));\n}\n\nfunction findAll(element\n/* : Element */\n, styledComponent\n/* : Object */\n) {\n  assertElement(element);\n  assertStyledComponent(styledComponent);\n  return element.querySelectorAll(\".\".concat(styledComponent.styledComponentId));\n}\n\nexports.enzymeFind = enzymeFind;\nexports.find = find;\nexports.findAll = findAll;","map":null,"metadata":{},"sourceType":"script"}